DATAS SEGMENT
	INNAME DB "Input name: ",'$'
	INTEL DB "Input a telephone number: ",'$'
	TELTABLE DB 50 DUP("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$")
    ;;NAME(20 CHARS) + '$' + TEL(8 CHARS) + '$' = 30 CHARS
    CHKYN DB "Do you want a telephone number?(Y/N)",'$'
    NATIP DB "name?",'$'
	NOFOUND DB "Not found!",0DH,0AH,'$'
	FORMATNAME DB "name                     tel.",0DH,0AH,'$'
    WANTEDNAME DB 21 DUP('$')
	TEMP DB 30 DUP('$')
	FLAG DW 0
	SFLAG DW 0
	NUM DW 0
    FFLAG DW 0
    WANTED DW 0
	MATCHPOS DW 0
DATAS ENDS

STACKS SEGMENT
	DB 100 DUP(0)
STACKS ENDS

CODES SEGMENT
	ASSUME CS:CODES,DS:DATAS,SS:STACKS
START:
	MOV AX,DATAS
	MOV DS,AX
	MOV ES,AX
	MOV AX,STACKS
	MOV SS,AX

	XOR BX,BX
MAIN_GET_TN:
	CALL GET_TEL_AND_NAME
	CMP FLAG,1
	JE MAIN_GET_TN_END
	ADD BX,30
	INC NUM
	JMP SHORT MAIN_GET_TN
MAIN_GET_TN_END:
	CALL NAME_SORT
    ;CALL TEST_FOR_TEL
    CALL CHECKYN
LOOKFOR:
    CALL INPUT_NAME
    CALL SEARCH
	CMP DI,49
	JA LOOKFOR
	LEA DX,FORMATNAME
	CALL DISPLAY
	LEA DX,TELTABLE[BX]
	CALL DISPLAY
	XOR SI,SI
CALLEN:
	MOV AL,TELTABLE[BX][SI]
	CMP AL,'$'
	JE CALFIN
	INC SI
	JMP SHORT CALLEN
CALFIN:
	MOV CX,25
	SUB CX,SI
	MOV AH,02H
PRINT_BLANK:
	MOV DL,' '
	INT 21H
	LOOP PRINT_BLANK
	ADD BX,21
	LEA DX,TELTABLE[BX]
	CALL DISPLAY
	MOV DL,0DH
	MOV AH,02H
	INT 21H
	MOV DL,0AH
	INT 21H
	JMP SHORT LOOKFOR
PROEND:
	MOV AX,4C00H
	INT 21H

;; Display string ,DX = OFFSET STRING
DISPLAY PROC NEAR
	PUSH AX
	MOV AH,09H
	INT 21H
	POP AX
	RET
DISPLAY ENDP

;;Get name from keyboard
;;RET AL(AL = char inputted)
GET_INPUT PROC NEAR
	MOV AH,01H
	INT 21H
	RET
GET_INPUT ENDP

;;BX = Index of person
;;FLAG = Input end
GET_TEL_AND_NAME PROC NEAR
	PUSH SI
	PUSH BX
	PUSH AX
GTAN_BEG:
	XOR SI,SI
	LEA DX,INNAME
	CALL DISPLAY
GET_NAME:
	CALL GET_INPUT
	CMP AL,0DH
	JE GET_TEL
	MOV TELTABLE[BX][SI],AL
	INC SI
	JMP SHORT GET_NAME

GET_TEL:
	CMP SI,0
	JE INPUT_END
	MOV SI,21
	LEA DX,INTEL
	CALL DISPLAY
TEL_LOOP:
	CALL GET_INPUT
	CMP AL,0DH
	JE GTAN_END
	MOV TELTABLE[BX][SI],AL
	INC SI
	JMP SHORT TEL_LOOP
INPUT_END:
	MOV FLAG,1
GTAN_END:
	POP AX
	POP BX
	POP SI
	RET
GET_TEL_AND_NAME ENDP

;;Swap two information
;;SWAP(*BX,*BP)
SWAP_TN PROC NEAR
	PUSH AX
	PUSH BX
	PUSH BP
	PUSH CX
	PUSH SI
	PUSH DI
	
    MOV CX,30
    XOR SI,SI
INITTEMP:
    MOV TEMP[SI],'$'
    INC SI
    LOOP INITTEMP
	MOV CX,30
	XOR SI,SI
	XOR DI,DI
	;;TEMP = BX
	PUSH DI
LOOP_TO_TEMP:
	MOV AH,TELTABLE[BX][SI]
	MOV TEMP[DI],AH
	INC SI
	INC DI
	LOOP LOOP_TO_TEMP
	
	;;BX = BP
	POP DI
	XOR SI,SI
	MOV CX,30
LOOP_TO_BX:
	MOV AH,TELTABLE[BP][DI]
	MOV TELTABLE[BX][SI],AH
	INC SI
	INC DI
	LOOP LOOP_TO_BX
	
	;;BP = TEMP
	XOR SI,SI
	XOR DI,DI
	MOV CX,30
LOOP_TO_BP:
	MOV AH,TEMP[SI]
	MOV TELTABLE[BP][DI],AH
	INC SI
	INC DI
	LOOP LOOP_TO_BP
	
	POP DI
	POP SI
	POP CX
	POP BP
	POP BX
	POP AX
	RET
SWAP_TN ENDP

;;Sort name	
;;merge
NAME_SORT PROC NEAR
	PUSH CX
	PUSH BX
	PUSH BP

	MOV CX,NUM
	CMP CX,1
	JNA MERGE_END
	DEC CX
LOOP_MERGE:
	PUSH CX
	XOR BX,BX
	MOV BP,30
    CMP CX,0
    JE MERGE_END
LOOP_CMP_SWAP:
    MOV SFLAG,0
	CALL CMPSTR
	CMP SFLAG,1
	JE SWAPT
AFTERSWAP:
	ADD BX,30
	MOV BP,BX
    ADD BP,30
	LOOP LOOP_CMP_SWAP
	POP CX
	LOOP LOOP_MERGE
MERGE_END:	
	POP BP
	POP BX
	POP CX
	RET
SWAPT:
	CALL SWAP_TN
	JMP SHORT AFTERSWAP 
NAME_SORT ENDP

;;STRCMP(BX,BP)
CMPSTR PROC NEAR
	PUSH SI
	PUSH DI
	PUSH AX
	PUSH CX

	MOV SFLAG,0
	MOV CX,20
	XOR SI,SI
	XOR DI,DI ;;
CMPLOOP:
	MOV AH,TELTABLE[BX][SI]
	CMP AH,TELTABLE[BP][DI]
    JL CMPEND
	JA CMPEND_MORE ;;BX > BP
	INC SI
	INC DI
	LOOP CMPLOOP 
CMPEND:
	POP CX
	POP AX
	POP DI
	POP SI
	RET
CMPEND_MORE:
	MOV SFLAG,1
	JMP SHORT CMPEND
CMPSTR ENDP

;;CHECK Y/N
CHECKYN PROC NEAR
    PUSH DX
    PUSH AX
    LEA DX,CHKYN
    MOV AH,09H
    INT 21H
ANS_INVALID:
    MOV AH,01H
    INT 21H
    CMP AL,0DH
    JE END_CHECK
    CMP AL,'Y'
    JE ANS_Y
    CMP AL,'N'
    JE ANS_N
    JMP SHORT ANS_INVALID
END_CHECK:
    CMP WANTED,0
    JE PROEND
    POP AX
    POP DX
    RET
ANS_Y:
    MOV WANTED,1
    JMP SHORT ANS_INVALID
ANS_N:
    MOV WANTED,0
    JMP SHORT ANS_INVALID
CHECKYN ENDP

;;Get name
INPUT_NAME PROC NEAR
    PUSH AX
    PUSH DX
    PUSH SI
    PUSH CX
    MOV CX,21
    XOR SI,SI
INIT_TEMP_NAME:
    MOV WANTEDNAME[SI],'$'
    INC SI
    LOOP INIT_TEMP_NAME

    LEA DX,NATIP
    MOV AH,09H
    INT 21H
    MOV AH,01H
    XOR SI,SI
GET_INPUT_NAME:
    INT 21H
    CMP AL,0DH
    JE GET_NAME_END
    MOV WANTEDNAME[SI],AL
    INC SI 
    JMP SHORT GET_INPUT_NAME
GET_NAME_END:
    CMP SI,0
    JE PROEND

    POP CX
    POP SI
    POP DX
    POP AX
    RET
INPUT_NAME ENDP

;;Find matched user
;;ret bx
SEARCH PROC NEAR
	PUSH AX
	PUSH DX
	PUSH SI

	XOR BX,BX
	XOR SI,SI
	XOR DI,DI
CMP_LOOP:
	XOR SI,SI
MATCH_LOOP:
	MOV AL,TELTABLE[BX][SI]
	CMP AL,WANTEDNAME[SI]
	JNE MATCH_FAIL
	INC SI
	CMP SI,8
	JE MATCH_END
	JMP SHORT MATCH_LOOP
MATCH_FAIL:
	INC DI
	CMP DI,50
	JA MATCH_FINISH_FAIL
	ADD BX,30
	JMP SHORT CMP_LOOP
MATCH_END:
	MOV MATCHPOS,DI
	POP SI
	POP DX
	POP AX
	RET
MATCH_FINISH_FAIL:
	LEA DX,NOFOUND
	MOV AH,09H
	INT 21H
	JMP SHORT MATCH_END
SEARCH ENDP
CODES ENDS
END START
